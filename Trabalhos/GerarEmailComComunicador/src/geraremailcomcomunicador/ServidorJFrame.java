/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package geraremailcomcomunicador;

import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author laboratorio
 */
public class ServidorJFrame extends javax.swing.JFrame {
    ServerSocket servidor;
    Socket cliente;
    ArrayList<Pessoa> lista = new ArrayList<>();
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ServidorJFrame.class.getName());

    /**
     * Creates new form ServidorJFrame
     */
    public ServidorJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPortaServidor = new javax.swing.JLabel();
        txtPortaServidor = new javax.swing.JTextField();
        btnIniciarServidor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtareaLog = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblPortaServidor.setText("Porta Servidor:");

        btnIniciarServidor.setText("Iniciar Servidor");
        btnIniciarServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarServidorActionPerformed(evt);
            }
        });

        txtareaLog.setColumns(20);
        txtareaLog.setRows(5);
        jScrollPane1.setViewportView(txtareaLog);

        jLabel1.setText("Log");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(btnIniciarServidor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblPortaServidor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPortaServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPortaServidor)
                    .addComponent(txtPortaServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIniciarServidor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarServidorActionPerformed
        if (txtPortaServidor.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campos incompletos para conexão");
        } else {
            criarServerSocket();
            new Thread(() -> aguardaClientes()).start();
            btnIniciarServidor.setEnabled(false);
        }
    }//GEN-LAST:event_btnIniciarServidorActionPerformed

    private void criarServerSocket(){
        try {
            servidor = new ServerSocket(Integer.parseInt(txtPortaServidor.getText()));
            System.out.println("Server escutando na porta " + txtPortaServidor.getText());
            txtPortaServidor.setEditable(false);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    private void aguardaClientes() {
        while (true) {
            try {
                /*Bloqueia esperando por uma conexão através do accept()
                 Ao receber a conexão, ele receberá como retorno uma referência do Socket do cliente*/
                cliente = servidor.accept();
                System.out.println("Recebi uma conexão de um cliente");
                
                Pessoa pessoaRecebida = ComunicadorObjetos.recebeObjeto(cliente);
                Pessoa pessoaComEmail = Pessoa.gerarEmail(pessoaRecebida.getNome());
                
                boolean encontrado = lista.contains(pessoaComEmail);

                if (!encontrado) {
                    lista.add(pessoaComEmail);
                    ComunicadorObjetos.enviaObjeto(cliente, pessoaComEmail);                    
                    txtareaLog.append("Novo cadastrado: " + pessoaComEmail + "\n");
                } else {
                    // se já existir, devolve null
                    ComunicadorObjetos.enviaObjeto(cliente, null);
                 
                    txtareaLog.append("Duplicado: " + pessoaComEmail.getNome() + "\n");
                }

                cliente.close();
                
                txtareaLog.append("Clientes na base:\n");
                for (Pessoa pessoa : lista) {
                    txtareaLog.append(" - " + pessoa + "\n");
                }
                txtareaLog.append("----------------------\n");
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new ServidorJFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciarServidor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPortaServidor;
    private javax.swing.JTextField txtPortaServidor;
    private javax.swing.JTextArea txtareaLog;
    // End of variables declaration//GEN-END:variables

    
}
